version: "3"

services:
  database:
    restart: always
    image: postgres:13-alpine
    container_name: movies_database
    env_file:
      - ./movies_admin/.env
    volumes:
      - ./pg_data:/var/lib/postgresql/data
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    networks:
      - nginx_network

  web_admin:
    restart: always
    build: .
    container_name: movies_admin
    env_file:
      - ./movies_admin/.env
    volumes:
      - static_volume:/home/app/movies/static
    depends_on:
      - database
    networks:
      - nginx_network

  nginx:
    restart: always
    image: nginx:1.19.2
    container_name: movies_nginx
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/sites:/etc/nginx/conf.d:ro
      - static_volume:/home/app/movies/static
    ports:
      - "80:80"
    depends_on:
      - web_admin
    networks:
      - nginx_network

volumes:
  static_volume:
  pg_data:

networks:
  nginx_network:
    driver: bridge